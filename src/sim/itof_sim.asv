run('itof_sim_param.m');

%CalcParams
f0 = SimParams.ModulationFreq;
T0 = 1/f0;

%Load Library
addpath(fullfile(fileparts(mfilename('fullpath')), Directory.Library));

%Load files and generate ALBEDO map / Depth mat array
dpt_files = dir(fullfile(fileparts(mfilename('fullpath')), Directory.Res.Depth,'*.dpt'));
rgb_files = dir(fullfile(fileparts(mfilename('fullpath')), Directory.Res.RGB,'*.tif'));

n = length(dpt_files);

dpt_rawlist = cell(1, n);
albedo_rawlist = cell(1, n);


parfor i = 1:length(dpt_files)
    dpt_file_path = fullfile(dpt_files(i).folder, dpt_files(i).name);
    rgb_file_path = fullfile(rgb_files(i).folder, rgb_files(i).name);

    temp_albedo = itof_rgb2albedo(rgb_file_path);
    temp_depth = depth_read(dpt_file_path);

    albedo_rawlist{i} = temp_albedo;
    dpt_rawlist{i} = temp_depth;
end

whos dpt_rawlist;
whos albedo_rawlist;

proc_flags = false(1, n);

if SimConfig.SingleFrameMode == 1 %Single frame mode의 경우 한 프레임만.
    target_frame_idx = SimConfig.SingleFrameModeTargetFrameIdx;
    proc_flags(target_frame_idx) = true;
else
    proc_flags(:) = true;  % 
end

result_list = cell(1, n);

parfor i = 1:n
    if ~proc_flags(i)
        continue;   %to Skip unwanted frames
    end

    albedo = albedo_rawlist{i};
    depth = dpt_rawlist{i};

    fprintf('Frame %d 처리...\n', i);
    result_list{i} = result;
end





temp1 = albedo_rawlist{1};
%disp(temp1(1:10,1:10));

temp = dpt_rawlist{1};
%whos temp;
%disp(temp(1:20,1:20))

fp = fullfile(dpt_files(1).folder, dpt_files(1).name);

dm = depth_read(fp);

es = 5e7;         
ea = 0.5 * es;    
T = 2e-3;         

%cm = itof_corr(T,f0,es,ea,dm,4);
%whos cm
%cm0 = cm(:,:,1);
%whos cm0
%disp(cm0(1:10,1:10));